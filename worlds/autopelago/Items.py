from typing import Literal

from BaseClasses import ItemClassification

generic_item_table: dict[Literal['goal', 'key', 'other_progression', 'useful_nonprogression', 'filler', 'trap', 'uncategorized'], tuple[str, ...]] = {
    'goal': (
        'Lockheed SR-71 Blackbird',
    ),
    'key': (
        'A Cookie',
        'Fresh Banana Peel',
        'MacGuffin',
        'Blue Turtle Shell',
        'Red Matador\'s Cape',
        'Pair of Fake Mouse Ears',
        'Bribe',
        'Masterful Longsword',
        'Legally Binding Contract',
        'Priceless Antique',
        'Premium Can of Prawn Food',
    ),
    'other_progression': (
    ),
    'useful_nonprogression': (
        'Refreshing Glass of Lemonade',
        'Bag of Powdered Sugar',
        'Organic Apple Core',
        'Faux Dalmation-Skin Coat',
        'An Entire Roast Chicken',
        'Plate of Spaghetti',
        'Bedazzled Cowboy Boots',
        'Get Out of Jail Free Card',
        'Fancy Rat-sized Tophat',
        'Freshly Baked Bread',
        'Winning Lottery Ticket',
        'Taco Salad that is Only Tacos',
        'Subscription to the Cheese of the Month Club',
        'Soup with a Hair in it',
        'Can of Spam',
        'Holographic Draw Four Card',
        'Lovely Bunch of Coconuts',
        'Tin-Foil Hat',
        'Fake Moustache',
        'Fruit Rollup',
        'Pair of 3D Glasses',
        'Fresh-baked Apple Pie',
        'Comfy Shorts',
        'Jetpack',
        'Letter from a Secret Admirer',
        'Extra Crunchy Peanutbutter',
        'Cheesnado',
        'Line-shaped Tetris Block',
        'Dark Blue Ghost',
        'Mundane Pickle',
        'Finest Potion',
        'Plague Doctor\'s Mask',
        'Bowl of Cereal',
        'Cake',
        'Apple wearing Jeans',
        'Macaroni and Cheese',
        'Pint of Ice Cream',
        'Protein Shake',
        'Best Burgers in Town',
        'Pack of Pickled Peppers',
        'Sword made out of Chocolate',
        'Inspiring Montage',
        'Tray of Lasagna',
        '5th Ace',
        'Dungeon Bread',
        'Gallon of Diet Soda',
        'Backwards Cap',
    ),
    'filler': (
    ),
    'trap': (
        'Half of a Worm',
        'Spicy Magazine',
        'Wooden Splinters',
        'Box Set of a Canceled TV Show',
        'Burning Phone',
        'One-way Ticket to Ohio',
        'Your Friendly Neighborhood Tapeworm',
        'Honey Roasted Packing Peanuts',
        'Deceased Pet Rock',
        'Circus Flea',
        'Game Bug',
        'Too Many Crabs',
        'Ticket for the Off-broadway Musical Rats',
        'Rat Poison',
        'Polybius Arcade Cabinet',
        'Poisonous Mushroom',
        'Cursed Slab',
        'An Illusion',
        'Too Much Eggnog',
        'Forgotten Moldy Fruitbasket',
        'Cartoonishly Large Bomb',
        'Peanut Boulder and Jelly Sandwich',
        'Hungry Hippopotamus',
        'Malfunctioning Boomerang',
        'Song that Never Ends',
        'Bubble Wrap',
        'Box of Fireworks',
        'Cabin Fever',
        'Self-destruct Button',
        'Train with a Scary Face',
        'Greater White Shark',
        'Rude Internet Comment',
        'Extra Premium Currency best value',
        'Distracting Squirrel',
        'Pie with a Bird Hiding Inside',
        'Expired Health Potion',
        'Itchy Iron Wool Sweater',
        'Gas Station Sushi',
        'Carbon Monoxide',
        'Mail-in Rebate for 11 cents',
    ),
    'uncategorized': (
        'Set of Three Seashells',
        'Chewed Bar of Soap',
        'Empty Snail Shell',
        'Loose Screw',
        'AAAAAA battery',
        'Off-brand Soda Can',
        'Generic Green Slime',
        'Handful of Loose Marbles',
        'Discarded Video Game Cartridge',
        'Packet of Ketchup',
        'set of Car Keys',
        'Suprisingly Tiny Knife',
        'Lit Candle',
        'Hilarious Mushroom',
        'Cat-shaped Wall Clock',
        'The Hit Boardgame Mousetrap',
        'Michelin Star',
        'Blue-eyes White Alligator Trading Card',
        'Rusty Pocketwatch',
        'Not Very Sharp Tool',
        'Damp Pineapple',
        'Right Sock',
        'Microplastic Pile',
        'Foreign Coin',
        'USB Containing Government Secrets',
        'Monkey\'s Paw',
        'Smelly Vintage T-Shirt',
        'McRib',
        'Phylactery',
        'Busted Flute',
        'Beartrap',
        'Cool Ninja Weapons',
        'Shrimp in a Bottle',
        'Bowl of Computer Chips',
        'Unmagic 8-ball',
        'Carpentry for Ants',
        'Golden Ticket',
        'Enchanted Guitar Pick',
        'Copy of E.T. the Extraterrestrial for Atari 2600',
        'Partially Used Blockbuster Gift Card',
        '3 Dollar Bill',
        'Hallpass',
        'Limited Edition Vintage Superhero Lunch Box Complete with Thermos',
        'Sweet Roadtrip Mixtape',
        'Extra-welldone Steak',
        'Year-supply of Calanders',
        'HD Photo of Bigfoot',
        'Lost Ctrl Key',
        'Not a Doll, but an Action Figure',
        'Bright Idea',
        'Autographed Copy of the Bible',
        'School Photo',
        'Sack with a Dollar Sign Painted on it',
        'Overdue Library Book',
        'Statue of David\'s Dog',
        'Yesterday\'s Horoscope',
        'Actual Lava Lamp',
        'Proof that Aliens Exist',
        'Small chain of Islands',
        'Pluto',
        'Oxford Comma',
        'Printer Driver Disc',
        'Bottled Toilet Water',
        'Human-sized Skateboard',
        'Loose Staples',
        'Beanie Baby in a Pot of Chili',
        'Radio Controlled Car',
        'Dihydrogen Monoxide',
        'Rubber Duck',
        '98 Red Balloons',
        'Red Balloon',
        'My Little Capybara',
        'Old Boot',
        'Clump of Hair',
        'Collectable Plate',
        'The Titanic',
        'Roll of Toilet Paper',
        'Canned Soup',
        'Left Sock',
        'Nintendo 65',
        'Fake Dog Poop',
        'Real Dog Poop',
        'Elephant in the Room',
        '5g Wireless Tachnology',
        'Helical Fossil',
        'Theodore Roosevelt Plushie',
        '4th-Dimensional Hypercube',
        'Bag of Wires You Might Need One of These Days',
        'Naughty Coal',
        'Misplaced Pixel',
        'RGB Lighting',
        'Half-eaten Pencil',
        'Rave Reviews',
        'Aggressive Post-it Notes',
        'Chaotic Emerald',
        'Mushroom Princess',
        'Pinball Wizard\'s Spellbook',
        'Lost Puzzle Piece',
        'Cubic Piece of Dirt',
        'Novelty Keychain',
        'Spare Axel',
        'Plank of Wood',
        'Brand New Car',
        'Little White Lie',
        'Coffee Mug Full of Pencils',
        'Elevator Music',
        'Headlight Fluid',
        'Radical Rock',
        'Sizzlin Scissors',
        'Just Paper',
        'Annoying Fairy',
        'Trash Can Lid',
        'Crystal Skull',
        'Scented Candle',
        'Scary Babydoll',
        'Hairless Yak',
        'Squeaky Mallet',
        'Starting Equipment',
        'Someone Else\'s Shoes',
        'Pocket',
        'Spilled Bag of Rice',
        'Magic Bathmat',
        'Probably Decomissioned Warhead',
        'Waldo\'s Home Address',
        'Broken Pottery',
        'Player 2',
        'Frog-shapped Chair',
        'Evil Plans',
        'Cardboard Box',
        'Brown Paper Bag',
        'Stapler in Jello',
        'Radioactive Green Ooze',
        '5 Elemental-themed Rings',
        'World\'s Smallest Violin',
        'Wardrobe of Alternate Dimensions',
        'Lawn Flamingo',
        'Withered Bonsi Tree',
        'Sassy Robot Companion',
        'Defeated Punching Bag',
        'Help I\'m Trapped in This Game and this is the only Way i Know how to Contact you Please get Me Out',
        '3 Easy Payments of 19.95',
        'Broken Fishing Rod',
        'Bag of Normal Beans',
        'Bottle of Spilled Milk',
        'Toy Boat Toy Boat Toy Boat',
        'The Krebs Cycle',
        'Ring of Visibility',
        'Just Some Sludge',
        'Sticky Video Game Controller',
        'Bomb-proof Refrigerator',
        'Lice-filled Wig',
        'Twenty Matches',
        'Drawing of a Cool S',
        'Handful of Glitter',
        'Forklift Driver Certification',
        'Neat Rock',
        'Dijkstra\'s Algorithm',
        'Fire Destinguisher',
        'Censor Bar',
        'Greasy Paper Bag',
        'Extended Warranty',
        'Legally Distinct Red Laser Sword',
        'Weapons-grade Folding Chair',
        'Whatever a Credenza Is',
        'Cracked Monopoly Board',
        'Corpse-pokin\' Stick',
        'CD containing \'Sounds of the Sewer\'',
        'Squeeky Vent Flap',
        'Pack Rat',
        'Pizza Rat',
        'Chef Rat',
        'Ninja Rat',
        'Gym Rat',
        'Computer Rat',
        'Pie Rat',
        'Ziggu Rat',
        'Acro Rat',
        'Lab Rat',
        'Soc-Rat-es',
        'Entire Rat Pack',
    )
}

game_specific_items: dict[str, dict[Literal['useful_nonprogression', 'filler', 'trap', 'uncategorized'], tuple[str, ...]]] = {
    'Pokemon Red and Blue': {
        'useful_nonprogression': (
            'Very Common Candy',
            'Icy Blue Feather',
            'Burning Orange Feather',
            'Charged Yellow Feather',
        ),
        'filler': (
        ),
        'trap': (
            'Item-Hider',
        ),
        'uncategorized': (
            'Oak\'s Other Parcel',
            'Silph Scoop',
            'Mustard Ball',
            'HM02.5 Walk',
            'Team Rocket Membership Card',
            'Vermillion City Truck Keys',
        ),
    },

    'Ocarina of Time': {
        'useful_nonprogression': (
           'Silver Skulltula Token',
           'Pickled Cucco Feet',
        ),
        'filler': (
        ),
        'trap': (
            'Overly-Talkative Fairy in a Bottle',
        ),
        'uncategorized': (
            'Broken Boss Key',
            'Jabu Jabu\'s Missing Kidney',
            'Lite Brite Arrow',
            'Song of Thyme',
            'Ganondorf\'s Tennis Racket',
            'Goron Rock Candy',
        ),
    },

    'Stardew Valley': {
        'useful_nonprogression': (
            'Prismatic Chard',
            'Cheese Seeds',
        ),
        'filler': (
        ),
        'trap': (
           'Rotten Parsnip',
           'Pam\'s Secret Stash',
        ),
        'uncategorized': (
            'JojaMart Sale Coupon',
            'Pickled Dust Sprite',
            'Rotten Walnut',
            'Abigail\'s Birth Certificate',
            'Mayor\'s Tax Returns',
        )
    },
}

all_item_names = [ \
    item for comp in ( \
        (item for items in generic_item_table.values() for item in items), \
        (item for game_items in game_specific_items.values() for items in game_items.values() for item in items)) \
    for item in comp \
]

a_item_name = generic_item_table['key'][0]
b_item_name = generic_item_table['key'][1]
c_item_name = generic_item_table['key'][2]
d_item_name = generic_item_table['key'][3]
e_item_name = generic_item_table['key'][4]
f_item_name = generic_item_table['key'][5]
goal_item_name = generic_item_table['key'][6]

item_name_to_defined_classification = {
    item_name: classification for comp in ( \
        ( (item_name, ItemClassification.progression) for item_name in generic_item_table['goal'] ), \
        ( (item_name, ItemClassification.progression) for item_name in generic_item_table['key'] ), \
        ( (item_name, ItemClassification.progression_skip_balancing) for item_name in generic_item_table['other_progression'] ), \
        ( (item_name, ItemClassification.useful) for item_name in generic_item_table['useful_nonprogression'] ), \
        ( (item_name, ItemClassification.useful) for game_items in game_specific_items.values() for item_name in game_items['useful_nonprogression'] ), \
        ( (item_name, ItemClassification.filler) for item_name in generic_item_table['filler'] ), \
        ( (item_name, ItemClassification.filler) for game_items in game_specific_items.values() for item_name in game_items['filler'] ), \
        ( (item_name, ItemClassification.trap) for item_name in generic_item_table['trap'] ), \
        ( (item_name, ItemClassification.trap) for game_items in game_specific_items.values() for item_name in game_items['trap'] ), \
        ( (item_name, None) for item_name in generic_item_table['uncategorized'] ), \
        ( (item_name, None) for game_items in game_specific_items.values() for item_name in game_items['uncategorized'] ), \
    ) for item_name, classification in comp
}
